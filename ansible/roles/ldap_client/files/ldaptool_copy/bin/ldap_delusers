#!/usr/bin/python3

"""
ldap_delusers
"""

import argparse
import csv
import sys
import ldaptool

def opts_set_defaults(opts):
    """
    complement options
    """
    if opts.ldap_domain is None:
        opts.ldap_domain = ldaptool.get_default_ldap_domain()
    if opts.ldap_passwd is None:
        opts.ldap_passwd = ldaptool.get_default_ldap_passwd()
    return opts

def delusers_of_opt(opts):
    """
    del user according to opts
    """
    opts = opts_set_defaults(opts)
    users_info = {}
    for users_csv in opts.file:
        with open(users_csv) as users_fp:
            users_info[users_csv] = list(csv.DictReader(users_fp))
    any_err = 0
    for users_csv, rows in users_info.items():
        for i, row in enumerate(rows):
            row.update(opts.__dict__)
            err = ldaptool.deluser(row)
            if err:
                print("{users_csv}:{line}: error occurred"
                      .format(users_csv=users_csv, line=i + 1))
            any_err = any_err or err
            if any_err and opts.exit_on_error:
                return any_err
    return any_err

def parse_args(argv):
    """
    parse comand line args
    """
    parser = argparse.ArgumentParser()
    parser.add_argument("file", nargs="+", help="csv files")
    parser.add_argument("--exit-on-error", action="store_true", default=False,
                        help="exit on the first error encountered")
    parser.add_argument("--ldap-passwd", help="LDAP domain password")
    parser.add_argument("--ldap-domain", help="LDAP domain (e.g., dc=myldap,dc=mdx,dc=jp")
    args = parser.parse_args(argv[1:])
    return args

def main():
    """
    main
    """
    opts = parse_args(sys.argv)
    if delusers_of_opt(opts) == 0:
        return 0                # OK
    return 1                    # NG

if __name__ == "__main__":
    sys.exit(main())
